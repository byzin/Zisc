/*!
  \file zisc_config.hpp
  \author Sho Ikeda

  Copyright (c) 2015-2020 Sho Ikeda
  This software is released under the MIT License.
  http://opensource.org/licenses/mit-license.php
  */

#ifndef ZISC_CONFIG_HPP
#define ZISC_CONFIG_HPP

// Standard C++ library
#include <cstdint>

constexpr unsigned int kZiscVersionMajor = @zisc_version_major@;
constexpr unsigned int kZiscVersionMinor = @zisc_version_minor@;
constexpr unsigned int kZiscVersionPatch = @zisc_version_patch@;
constexpr char kZiscVersion[] = "@zisc_version@";

namespace zisc {

// General
using int8b = std::int8_t;
using int16b = std::int16_t;
using int32b = std::int32_t;
using int64b = std::int64_t;
using uint = unsigned int;
using uint8b = std::uint8_t;
using uint16b = std::uint16_t;
using uint32b = std::uint32_t;
using uint64b = std::uint64_t;

// Boolean values
constexpr uint8b kFalse = 0;
constexpr uint8b kTrue = 1;

/*!
  \brief Configuration of zisc source
  */
class Config
{
 public:
  enum class ImplType : uint
  {
    kGcc = 0,
    kClang,
    kMsvc
  };


  //! Return the implementation type
  static constexpr ImplType implType() noexcept;

  // Algorithm config
  static constexpr bool isStlBinaryTreeUsed() noexcept;

  // Math library config

  //! Check if STL math library is used
  static constexpr bool isStlMathUsed() noexcept;

  //! Check if STL 'exp' is used
  static constexpr bool isStlMathExpUsed() noexcept;

  //! Check if STL 'log' and 'log2' are used
  static constexpr bool isStlMathLogUsed() noexcept;

  //! Check if STL 'pow' is used
  static constexpr bool isStlMathPowUsed() noexcept;

  //! Check if STL 'sqrt' is used
  static constexpr bool isStlMathSqrtUsed() noexcept;

  //! Check if STL 'cbrt' is used
  static constexpr bool isStlMathCbrtUsed() noexcept;

  //! Check if STL 'sin', 'cos' and 'tan' are used
  static constexpr bool isStlMathTrigonometricUsed() noexcept;

  //! Check if STL 'asin', 'acos' and 'atan' are used
  static constexpr bool isStlMathInvTrigonometricUsed() noexcept;
};

} // namespace zisc

#include "zisc/zisc_config-inl.hpp"

#endif // ZISC_CONFIG_HPP
